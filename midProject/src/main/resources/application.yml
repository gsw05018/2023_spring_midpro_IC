server:
  port: 8090 #포트 번호
spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: ${spring.servlet.multipart.max-file-size}
  profiles:
    include: secret
  mail:
    host: smtp.gmail.com
    port: 587
    username: gsw643500@gmail.com
    password: NEED_TO_INPUT_ON_SECRET
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  output:
    ansi:
      enabled: always
  datasource: # 데이터베이스 연결
    driver-class-name: org.mariadb.jdbc.Driver # 사용할 데이터베이스 이름
    url: jdbc:mariadb://localhost:3306/mid_pro_dev # 데이터베이스 URL 지정
    username: root  # 데이터베이스 연결 사용자 이름
    password: # 데이터베이스 사용자 비밀번호
  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId:
            client-secret:
            scope: profile_nickname, profile_image
            client-name: kakao
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8090/login/oauth2/code/kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
custom:
  tempDirPath: c:/temp/demo5/temp
  site:
    name: 뭐 하지? 또 가지 뭐!
    baseUrl: "http://localhost:8090"
  genFile:
    dirPath: c:/temp/demo5
  security:
    oauth2:
      client:
        registration:
          kakao:
            devUserOauthId: 3058152288